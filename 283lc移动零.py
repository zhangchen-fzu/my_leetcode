'''
#############################################################################################################
**题目283：（数组）
给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。
**示例：
输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
**条件：
必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。
#############################################################################################################
'''

'''
双指针方法：
原地修改使用双指针方法，慢指针记录位置，快指针寻找非零值
复杂度分析：
时间复杂度：O(N)
空间复杂度：O(1)
'''
class Solution(object):
    def moveZeroes(self, nums):
        slow,fast=0,0
        while fast<len(nums):
            if nums[fast]!=0:
                nums[slow],nums[fast]=nums[fast],nums[slow]
                slow+=1
            fast+=1
        return nums

