'''
#############################################################################################################
**题目：（数组）
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。
你可以假设数组中无重复元素。
**示例：
输入: [1,3,5,6], 5
输出: 2
#############################################################################################################
'''

'''
暴力方法：
循环数组，找到第一个大于等于target的值，该值有两种情况：
1.等于target:符合“在数组中找到目标值，并返回其索引”
2.大于target:该值是数组中第一个大于target的值，符合“如果目标值不存在于数组中，返回它将会被按顺序插入的位置”
复杂度分析：
时间复杂度：O(N)
空间复杂度：O(1)
'''

class Solution1(object):
    def searchInsert(self, nums, target):
        for i in range(len(nums)):
            if nums[i]>=target:
                return i
        return len(nums)

'''
二分查找法：
在有序数组中查找某元素或左边界值或右边界值，想到二分查找
该题需要“在数组中找到目标值”相当于找目标值
”如果目标值不存在于数组中，返回它将会被按顺序插入的位置“相当于找右边界值
复杂度分析：
时间复杂度：O(logN)
空间复杂度：O(1)
'''
class Solution2(object):
    def searchInsert(self, nums, target):
        l=0
        r=len(nums)
        while l<r:
            mid=(l+r)//2
            if nums[mid]>target:
                r=mid
            elif nums[mid]<target:
                l=mid+1
            else:
                return mid
        return r