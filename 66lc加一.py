'''
#############################################################################################################
**题目66：（数组）
给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。
最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。
你可以假设除了整数 0 之外，这个整数不会以零开头。
**示例：
输入：digits = [1,2,3]
输出：[1,2,4]
解释：输入数组表示数字 123。
**条件：
1 <= digits.length <= 100
0 <= digits[i] <= 9
#############################################################################################################
'''

'''
模拟加法运算：
逆序操作，carry用来存放进位的情况，当进位为0时，可以早停止接下来的运算
复杂度分析：
时间复杂度：O(N)
空间复杂度：O(1)
'''

class Solution(object):
    def plusOne(self, digits):
        carry=0
        for i in range(len(digits)-1,-1,-1):
            carry,digits[i]=divmod(digits[i]+1,10)
            if carry==0:
                return digits
        return [1]+digits if carry==1 else digits

